version: 2.1
orbs:
  docker-publish: circleci/docker-publish@0.1.4

# jobs:
#     build_and_test:
#       docker:
#         - image: circleci/python:3
#       steps:
#         - checkout
#
#         - setup_remote_docker:
#             docker_layer_caching: true
#
#         - run:
#             name: Build docker image
#             command: >
#               docker build -t ismikin/matcher-py:${CIRCLE_BRANCH}-${CIRCLE_WORKFLOW_ID} .
#
#         - run:
#             name: Build expanded image with test stuff included
#             command: |
#               docker build -f .circleci/test.Dockerfile \
#                 --build-arg baseImage=ismikin/matcher-py:${CIRCLE_BRANCH}-${CIRCLE_WORKFLOW_ID} \
#                 -t ismikin/matcher-py:${CIRCLE_BRANCH}-${CIRCLE_WORKFLOW_ID}-test-img .
#
#         - run:
#             name: Run tests
#             command: |
#               docker run  \
#                 --name test-run \
#                 ismikin/matcher-py:${CIRCLE_BRANCH}-${CIRCLE_WORKFLOW_ID}-test-img
#
#         - run:
#             name: Copy out test reports
#             when: always
#             command: |
#               docker cp test-run:/src/test-reports/. test-reports
#
#         - store_test_results:
#             path: test-reports


workflows:
  build_without_publishing_job:
    jobs:
      - docker-publish/publish:
          deploy: false
          tag: latest
          filters:
            branches:
              ignore: master
          after_build:
            - run:
                name: Preview Docker Tag for Build
                command: |
                   DOCKER_TAG=$(docker run ismikin/matcher-py:latest --version)
                   echo "Version for Docker tag is ${DOCKER_TAG}"

  docker_with_lifecycle:
    jobs:
      - docker-publish/publish:
          tag: latest
          filters:
            branches:
             only: master
          after_build:
            - run:
                name: Publish Docker Tag with SIF Python Version
                command: |
                   DOCKER_TAG=$(docker run singularityhub/sif:latest --version)
                   echo "Version for Docker tag is ${DOCKER_TAG}"
                   docker tag singularityhub/sif:latest singularityhub/sif:${DOCKER_TAG}
